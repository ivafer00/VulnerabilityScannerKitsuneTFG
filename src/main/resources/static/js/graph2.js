function showWebGraph(button){
	var id = "#urlMapAuthenticatedUser";
	if(button.id == "anonymous"){
		id = "#urlMapAnonymousUser";
	}
	if($(id).is(":visible")){
		$(id).hide()
	} else {
		$(id).show()
	}
}

function addCircle(nodeId, circleText, grid){
	console.log(circleText)
    var parentNode = grid.$id(nodeId);
    if (parentNode.data('isCircle') || parentNode.data('circleId'))
        return;
//    parentNode.lock();
    var px = parentNode.position('x');
    var py = parentNode.position('y');    
    var circleId = (grid.nodes().size() + 1).toString();
    console.log(circleId)
    parentNode.data('circleId', circleId);
    var circle = grid.add({
        group: 'nodes',
        data: { weight: 75, id: circleId, isCircle: true },
        position: { x: px, y: py }
    }).css({
        'background-color': 'yellow',
        'height': 20,
        'width': 20,
        'shape': 'ellipse',
        'text-wrap': 'wrap',
	    'text-halign': 'center',
      	'text-valign': 'center',
        'label': circleText,
        'background-opacity': 0.5
    });
}

function getGraphFromRawData(map, baseUrl){
	var array = map.substr(1,map.length-2);
	array = array.split("&#x3D;")
	var graph = new Map();
	for(var i=0;i<array.length-1;i++){
		var key = array[i];
		if(i!=0){
			key = array[i].split("], ")[1];
		}
		var value = array[i+1].split("], ")[0];
		if(value !== "undefined"){
			value = value.substr(1);
			if(i==array.length-2){
				value= value.substr(0,value.length-1)
			}
			value = value.split(", ");
			values = []
			for(var j=0;j<value.length;j++){
				//console.log(value[j].split(baseUrl))
				if(value[j].split(baseUrl).length == 1 && value[j]!==""){
					value[j] = value[j].split("http");
					graph.set(value[j][1], []);
					values.push(value[j]);	
				} else {
					value[j] = value[j].split(baseUrl);
					values.push(value[j]);	
				}
			}
		} else {
			value = []
		}
		if(key.includes(baseUrl)){
			key = key.split(baseUrl)[1];	
		}
		if(key!==undefined){
			graph.set(key, values);	
		}
	}
	return graph;
}

function getCytoscapeGraph(id, graph){
	var cy = cytoscape(
		{
			container: document.getElementById(id),
			style: [
			{
	            selector: 'node',
	            style: {
	                shape: 'square',
	                'background-color': 'red',
	                'height': 40,
       				'width': 40,
	                label: 'data(id)'
	            }
        	}, {
				selector: 'edge',
				style: {
					'curve-style': 'bezier',
					'target-arrow-shape': 'triangle'
				}
			}
        	]
		}
	);
	for(const entry of graph.entries()){
		var key = entry[0]
		var value = entry[1]
		cy.add({
			data: { id: key}
		});
	}
	cy.layout({
	    name: 'circle',
	    spacingFactor: 1.5
	}).run();
	for(const entry of graph.entries()){
		var key = entry[0]
		var value = entry[1];
		for(var i=0;i<value.length;i++){
			if(value[i] !== undefined){
				var type = value[i][0].split("http")[0]
				if(type === "a"){
					cy.add({
						data:{
							id: key + " " + value[i],
							source: key,
							target: value[i][1]
						}
					});					
				} else if(type === "redirect"){
					cy.add({
						data:{
							id: key + " " + value[i],
							source: key,
							target: value[i][1]
						}
					});
				} else if(type="iframe"){
					//addCircle(key, value[i][1], cy)
				}
			}	
		}
	}
	return cy;
}

