package es.urjc.Vulnerabilities.FormBased.Injection.SQLI.TimeBased;

import es.urjc.Report.Vulnerabilities.FormBased.Injection.SQLi.TimeBasedSQLiReport;
import es.urjc.Scanner.Security.WebScraper;
import es.urjc.Vulnerabilities.FormBased.Injection.Injection;
import es.urjc.WebElements.Form.FillStrategies.FillOneByOne;
import es.urjc.WebElements.Form.FillStrategies.FillStrategy;
import es.urjc.WebElements.Form.Form;
import es.urjc.Report.Report;
import es.urjc.WebElements.ServerResponse;

import javax.persistence.Entity;

@Entity
public class TimeBasedSQLi extends Injection {

    private int seconds;

    public TimeBasedSQLi(){
        super("");
    }

    public TimeBasedSQLi(String payload, int seconds){
        super(payload);
        this.seconds = seconds;
    }

    @Override
    public String parsePayload() {
        String payload = super.parsePayload();
        return payload.replaceAll("##sleep_time##", String.valueOf(this.seconds));
    }

    @Override
    public FillStrategy getFillStrategy(Form form) {
        return new FillOneByOne(form);
    }

    @Override
    public Report detect(WebScraper webScraper, Form form) {
        String xmlHttpRequest = form.getXHR(webScraper.parsePayload(this.parsePayload()));
        ServerResponse response = webScraper.sendXHR(xmlHttpRequest);
        form.setStatusCode(response.getStatus());

        if(response.getElapsedTime()>=this.seconds*1000){
            TimeBasedSQLiReport report = new TimeBasedSQLiReport();
            report.addRequest(response.getRequest());
            report.addResponse(response.getResponseText());
            report.addVulnerableInput(form.nextInjectableInput());
            report.setPayloadId(String.valueOf(this.getId()));
            report.setFormId(form.getId());
            report.setSeconds(response.getElapsedTime());
            return report;
        }
        return null;
    }

}
