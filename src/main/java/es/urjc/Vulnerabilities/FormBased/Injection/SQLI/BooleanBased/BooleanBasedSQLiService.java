package es.urjc.Vulnerabilities.FormBased.Injection.SQLI.BooleanBased;


import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Service;

import java.util.ArrayList;
import java.util.List;
import java.util.Optional;

@Service
public class BooleanBasedSQLiService {
    @Autowired
    protected BooleanBasedSQLiRepository BooleanBasedSQLiRepository;

    public List<BooleanBasedSQLi> findAll(){
        return this.BooleanBasedSQLiRepository.findAll();
    }

//    @PostConstruct
//    public void init(){
//        BooleanBasedSQLiRepository.save(new BooleanBasedSQLi("1' OR '##first_value##'='##second_value##"));
//        BooleanBasedSQLiRepository.save(new BooleanBasedSQLi("1 OR ##first_value##=##second_value##"));
//        BooleanBasedSQLiRepository.save(new BooleanBasedSQLi("1' AND '##first_value##'='##second_value##"));
//        BooleanBasedSQLiRepository.save(new BooleanBasedSQLi("1 AND ##first_value##=##second_value##"));
//    }

    public List<BooleanBasedSQLi> findById(Long[] BooleanBasedSQLinjectionIdentifiers){
        List<BooleanBasedSQLi> BooleanBasedSQLinjectionList = new ArrayList<>();
        for (Long BooleanBasedSQLidentifier: BooleanBasedSQLinjectionIdentifiers) {
            Optional<BooleanBasedSQLi> optional = this.BooleanBasedSQLiRepository.findById(BooleanBasedSQLidentifier);
            optional.ifPresent(BooleanBasedSQLinjectionList::add);
        }
        return BooleanBasedSQLinjectionList;
    }
}
