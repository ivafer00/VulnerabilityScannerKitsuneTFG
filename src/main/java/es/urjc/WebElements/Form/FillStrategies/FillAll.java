package es.urjc.WebElements.Form.FillStrategies;

import es.urjc.WebElements.ApiObjectParser;
import es.urjc.WebElements.Form.Form;
import es.urjc.WebElements.Form.Input;

public class FillAll extends FillStrategy{

    public FillAll(Form form){
        super(form);
    }

    @Override
    public void nextStep(Form form) {
        super.setIndex(form.numberOfInputs());
        form.fillInputValuesByPriority();
        for (int i = 0; i < form.numberOfInputs(); i++) {
            Input input = form.getInputByIndex(i);
            if(this.ifInputMatchesCondition(input)){
                super.fillInputValue(input);
                form.setInputByIndex(i, input);
            }
        }
        if(this.isUrlVariable()){
            this.changeUrlVariable();
            super.setIndex(0);
            form.setSubmitUrl(form.getSubmitUrl().replaceAll("\\{text}", "{text_payload}"));
        } else {
            form.setSubmitUrl(form.getSubmitUrl().replaceAll("\\{text_payload}", "{text}"));
        }
    }

    public boolean ifInputMatchesCondition(Input input){
        return !input.isAPossibleCSRFToken();
    }
}
