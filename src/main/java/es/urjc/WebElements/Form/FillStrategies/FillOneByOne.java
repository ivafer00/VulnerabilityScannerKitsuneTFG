package es.urjc.WebElements.Form.FillStrategies;

import es.urjc.WebElements.ApiObjectParser;
import es.urjc.WebElements.Form.Form;
import es.urjc.WebElements.Form.Input;

public class FillOneByOne extends FillStrategy {

    public FillOneByOne(Form form) {
        super(form);
    }


    @Override
    public void nextStep(Form form) {
        if(this.hasNextElement()){
            int inputIndex = super.getIndex();

            if(inputIndex == 0){
                form.fillInputValuesByPriority();
            }
            if(inputIndex > 0){
                Input input = form.getInputByIndex(inputIndex-1);
                input.fillValue();
                form.setInputByIndex(inputIndex-1, input);
            }
            Input input = form.getInputByIndex(inputIndex);
//            if(input == null) System.out.println(inputIndex);
            super.fillInputValue(input);
            super.setIndex(inputIndex+1);
            form.setInputByIndex(inputIndex, input);
        }

        if(this.isUrlVariable()){
            form.setSubmitUrl(form.getSubmitUrl().replaceAll("\\{text}", "{text_payload}"));
            if(!this.hasNextElement()){
                this.changeUrlVariable();
                this.setIndex(0);
            }
        } else {
            form.setSubmitUrl(form.getSubmitUrl().replaceAll("\\{text_payload}", "{text}"));
        }
    }
}
