package es.urjc.WebElements;

import com.google.gson.Gson;
import es.urjc.WebElements.Form.Input;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.Map;

public class ApiObjectParser {
    private HashMap<String, Input> params;
    private ArrayList<String> names;
    private int lastIndex;

    public ApiObjectParser(){
        this.params = new HashMap<>();
        this.names = new ArrayList<>();
        this.lastIndex = 0;
    }

    public ApiObjectParser(ApiObjectParser apiObjectParser){
        this.params = apiObjectParser.params;
        this.names = apiObjectParser.names;
        this.lastIndex = 0;
    }

    public static String[] parseText(String entry){
        String [] entries = entry.split(" ");
        if(entries.length == 2){ return entries;}
        return null;
    }

    public static String parseType(String type){
        if(type.startsWith("integer(") || type.startsWith("number(")) return "number";
        if(type.equals("string")) return "text";
        return "object";
    }

    public void setParam(String key, Input value){
        this.params.put(key, value);
        this.names.add(key);
    }

//    public String toJsonString(){
//        return new Gson().toJson(this);
//    }
//
//    public String parseJsonString(){
//        HashMap<String, String> values = new HashMap<>();
//        for(Map.Entry<String, Input> entry : params.entrySet()){
//            String key = entry.getKey();
//            Input value = entry.getValue();
//            values.put(key, value.getValue());
//        }
//        return new Gson().toJson(values);
//    }
//
//    public static ApiObjectParser fromJsonString(String json){
//        return new Gson().fromJson(json, ApiObjectParser.class);
//    }
//
//    public void nextStep(boolean removeLastIteration){
//        if(removeLastIteration && this.lastIndex > 0){
//            String key = this.names.get(this.lastIndex-1);
//            Input input = this.params.get(key);
//            input.fillValue();
//            this.params.put(key, input);
//        }
//        String key = this.names.get(this.lastIndex);
//        Input input = this.params.get(key);
//        if(!input.haveSameType("object")  && !input.haveSameType("number"))input.setValue("##value_to_fill##");
//        else if(input.haveSameType("object")){
//            input.setValue(input.getPreallocatedValue().replaceAll("\"number\"", "##value_to_fill##").replaceAll("\"string\"", "\"##value_to_fill##\""));
//        } else input.fillValue();
//        this.params.put(key, input);
//        this.lastIndex += 1;
//    }

//    public boolean hasNextStep(){
//        return this.names.size() > this.lastIndex;
//    }

}
