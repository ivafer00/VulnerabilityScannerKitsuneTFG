package es.urjc.Scanner.Requirements;

import java.util.ArrayList;
import java.util.List;
import java.util.Objects;

public class LineOfCode implements Comparable<LineOfCode>{
    private int lineIndex;
    private String content;

    public LineOfCode(int lineIndex, String content){
        this.lineIndex = lineIndex;
        this.content = content;
    }

    public boolean matches(String text){
        return content.matches(text);
    }

    public boolean contains(String text){
        return content.contains(text);
    }

    @Override
    public int compareTo(LineOfCode o) {
        return this.lineIndex - o.lineIndex;
    }

    public String getContent() {
        return content;
    }

    @Override
    public boolean equals(Object o) {
        if (this == o) return true;
        if (o == null || getClass() != o.getClass()) return false;
        LineOfCode that = (LineOfCode) o;
        return lineIndex == that.lineIndex && Objects.equals(content, that.content);
    }

    @Override
    public int hashCode() {
        return Objects.hash(lineIndex, content);
    }

    @Override
    public String toString() {
        return "LineOfCode{" +
                "lineIndex=" + lineIndex +
                ", content='" + content + '\'' +
                '}';
    }

    public List<String> getContext(List<String> strings, int prevLines, int postLines){
        int begin = 0;
        int end = strings.size()-1;
        if(this.lineIndex - prevLines > begin) begin = this.lineIndex - prevLines;
        if(this.lineIndex + postLines < end) end = this.lineIndex + postLines;

        List<String> context = new ArrayList<>();
        for (int i = begin; i <= end; i++){
            context.add(strings.get(i));
        }
        return context;
    }
}
