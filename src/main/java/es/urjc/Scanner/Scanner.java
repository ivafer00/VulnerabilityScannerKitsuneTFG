package es.urjc.Scanner;

import es.urjc.Scanner.Requirements.RequirementsTester;
import es.urjc.Scanner.Security.VulnerabilityScanner;
import org.springframework.web.servlet.mvc.method.annotation.SseEmitter;

import java.util.Objects;

public class Scanner {
    private String id;
    private final RequirementsTester requirementsTester;
    private final VulnerabilityScanner vulnerabilityScanner;

    public Scanner(String id){
        this.requirementsTester = null;
        this.vulnerabilityScanner = null;
        this.id = id;
    }

    public Scanner(String urlToScan, String projectPath, ScanningOptions options){
        this.vulnerabilityScanner = new VulnerabilityScanner(urlToScan, options);
        this.requirementsTester = new RequirementsTester(projectPath, options);
    }

    public void setId(String id) {
        this.id = id;
        if(this.vulnerabilityScanner != null) this.vulnerabilityScanner.setId(id);
    }

    public void setWebCommunicator(SseEmitter sseEmitter){
        if(this.vulnerabilityScanner != null) this.vulnerabilityScanner.setWebCommunicator(sseEmitter);
        if(this.requirementsTester != null)   this.requirementsTester.setWebCommunicator(sseEmitter);
    }

    public void doScan(){
        if(this.requirementsTester != null) this.requirementsTester.doScan();
        if(this.vulnerabilityScanner != null) this.vulnerabilityScanner.doScan();
    }


    @Override
    public boolean equals(Object o) {
        if (this == o) return true;
        if (o == null || getClass() != o.getClass()) return false;
        Scanner scanner = (Scanner) o;
        return Objects.equals(id, scanner.id);
    }

    @Override
    public int hashCode() {
        return Objects.hash(id);
    }
}
